plugins {
    id 'com.android.application'
}

def ALLOWED_DOMAINS = System.getenv('ALLOWED_DOMAINS') ?: 'example.com'

static def generateIntentFilterData(allowedDomains) {
    def intentHosts = []
    def startupUrl = System.getenv('STARTUP_URL')

    if (startupUrl) {
        intentHosts << new URI(startupUrl).getHost()
    } else {
        def domains = allowedDomains.split(',')
        for (int i = 0; i < Math.min(domains.size(), 10); i++) {
            intentHosts << domains[i]
        }
    }

    def intentFilterData = ''
    intentHosts.each { host ->
        intentFilterData += """
            <data android:host="${host}" android:scheme="https" />
        """
    }
    return intentFilterData
}

android {
    signingConfigs {
        release {
            storeFile = file("keystore/android_keystore.jks")
            storePassword System.getenv("SIGNING_STORE_PASSWORD")
            keyAlias System.getenv("SIGNING_KEY_ALIAS")
            keyPassword System.getenv("SIGNING_KEY_PASSWORD")
        }
    }
    
    compileSdkVersion 34

    defaultConfig {
        buildConfigField "String", "ALLOWED_DOMAINS", "\"${ALLOWED_DOMAINS}\""
        buildConfigField "String", "STARTUP_URL", "\"${System.getenv('STARTUP_URL') ?: ''}\""
        buildConfigField "String", "VIEW_MODE", "\"${System.getenv('VIEW_MODE') ?: 'AUTO'}\""
        buildConfigField "boolean", "BLOCK_MEDIA", "${System.getenv('BLOCK_MEDIA') ?: 'false'}"
        buildConfigField "boolean", "BLOCK_ADS", "${System.getenv('BLOCK_ADS') ?: 'false'}"
        buildConfigField "boolean", "NO_SSL", "${System.getenv('NO_SSL') ?: 'false'}"
        resValue "string", "app_name", System.getenv('APP_NAME') ?: "My Application"
        applicationId System.getenv('APPLICATION_ID') ?: "com.webview.myapplication"
        
        manifestPlaceholders = ["intentFilterData": generateIntentFilterData(ALLOWED_DOMAINS)]

        minSdkVersion 16
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    namespace 'com.webview.myapplication'
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.12.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}